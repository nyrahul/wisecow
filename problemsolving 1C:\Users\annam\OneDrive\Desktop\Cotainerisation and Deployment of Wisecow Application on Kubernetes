1.Dockerization create a Dockerfile
#Use the official Node.js image.
From node:14
#Set the working directory.
WORKDIR/usr/src/app
# Copy package.json to the working directory.
COPY package*.json./
# Install dependenceies
RUN npm install
#COPY the rest of the application code.
COPY..
#Expose the part the app runs on>
EXPOSE 3000
#Start the application.
CMD["npm","start"]
...
2.Kubernetes Deployment create kubernetes Manifest Files
a.'deployment.yaml'

apiversion:apps/v1
kind:Deployment
metadata:
 name:wisecow-app
spec:
 replicas:2
selector:
 matechLabels:
  app:wisecow
template:
 metadata:
  labels:
   app:wisecow
spec
containers:
  -name:wisecow
   image:<YOUR_REGISTRY>/wisecow:latest 
# Update with your Docker registry
ports:
-containerPort:3000
b. Service (service.yaml)
apiversion:apps/vl
kind:Deployment
metadata:
 name:wisecow-app
spec:
 selector:
  app:wisecow
ports:
 -protocol:TCP
  port:80
  targetPort:3000
type:LoadBalancer
C.Ingress with TLS(ingress.yaml)
apiversion:networking.k8s.io/v1
kind:Ingress
metadata:
  name:wisecow-ingress
annotations:
cert-manager.io/cluster-issuer:
   "letsencrypt-prod"
   spec:
     rules:
     -host:
wisecow.yourdomain.com
 http:paths:
  -path:/
   path Tyes:Prefix
   backend:
    service:
      name:wisecow-service
      port:
        number:80
tls:
-hosts:
 -wisecow.yourdomain.com
 secretName:
 wisecow-tls-secret
 3.CI/CD Pipeline using GitHub Actions
 name:CI/CD Pipeline for Wisecow
 on:
  push:
    branches:
    -main
    jobs:
     build:
      runs-on:ubuntu latest
      steps:
       -name:Checkout Repository 
       uses:actions/checkout@v2
       -name:Set up Docker Buildx
       uses:docker/setup-buildx
-action@v2
      -name:Log in to Docker Hub 
       uses:docker/login
-action@v2
     with:
     username:${{secrets.DOCKER_USERNAME}}
     password:${{secrets.DOCKER_PASSWORD}}
     -name: Build and push Docker image
      uses:docker/build-push
-action@v2
    with:
     context:
      push:true
      tags:${{secrets.DOCKER_USERNAME}}/wisecow:latest
        deploy:needs:build
        runs-on:ubuntu_latest
        steps:
             -name:Set up kubectl
              uses:azure/setup
-kubectl@v1
      with:
       kubeconfig:${{sercrets.KUBECONFIG}}
       -name:Deploy to kubernets
        run:|
         kubectl apply -f k8s/
deployment.yaml
     kubectl apply -f k8s/
service.yaml
     kubectl apply -f k8s/
ingress.yaml
